"use strict";(self.webpackChunkpersonal_website=self.webpackChunkpersonal_website||[]).push([[3097],{4850:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"notes/Useful tools/Docker","title":"Docker","description":"Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly.","source":"@site/docs/notes/Useful tools/Docker.md","sourceDirName":"notes/Useful tools","slug":"/notes/Useful tools/Docker","permalink":"/Personal-Website/docs/notes/Useful tools/Docker","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/notes/Useful tools/Docker.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Node Version Manager (nvm)","permalink":"/Personal-Website/docs/notes/Useful tools/Node Version Manager"},"next":{"title":"Ollama","permalink":"/Personal-Website/docs/notes/Useful tools/Ollama"}}');var t=r(4848),s=r(8453);const a={sidebar_position:2},c="Docker",d={},l=[{value:"1. Update apt tool",id:"1-update-apt-tool",level:3},{value:"2. Install docker",id:"2-install-docker",level:3},{value:"3. Add docker to group (To run docker w/o using sudo)",id:"3-add-docker-to-group-to-run-docker-wo-using-sudo",level:3},{value:"4. Try to run docker",id:"4-try-to-run-docker",level:3}];function i(e){const o={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"docker",children:"Docker"})}),"\n",(0,t.jsx)(o.p,{children:"Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly."}),"\n",(0,t.jsx)(o.h3,{id:"1-update-apt-tool",children:"1. Update apt tool"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"sudo apt update\r\nsudo apt upgrade\n"})}),"\n",(0,t.jsx)(o.h3,{id:"2-install-docker",children:"2. Install docker"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:'sudo install -m 0755 -d /etc/apt/keyrings\r\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\r\nsudo chmod a+r /etc/apt/keyrings/docker.asc\r\n\r\necho \\\r\n "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\r\n $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \\\r\n sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\r\n\r\nsudo apt-get update\r\n\r\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n'})}),"\n",(0,t.jsx)(o.h3,{id:"3-add-docker-to-group-to-run-docker-wo-using-sudo",children:"3. Add docker to group (To run docker w/o using sudo)"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"sudo groupadd docker\r\nsudo usermod -aG docker $USER\r\nnewgrp docker\n"})}),"\n",(0,t.jsx)(o.h3,{id:"4-try-to-run-docker",children:"4. Try to run docker"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"# This command will automatically pull image from docker repo and run as a container.\r\ndocker run hello-world\r\n\r\n# Make sure you can see the message below after you run hello-world.\r\nshihu@shihu-VirtualBox:~$ docker run hello-world\r\nUnable to find image 'hello-world:latest' locally\r\nlatest: Pulling from library/hello-world\r\n17eec7bbc9d7: Pull complete\r\nDigest: sha256:a0dfb02aac212703bfcb339d77d47ec32c8706ff250850ecc0e19c8737b18567\r\nStatus: Downloaded newer image for hello-world:latest\r\n\r\nHello from Docker!\r\nThis message shows that your installation appears to be working correctly.\r\n\r\nTo generate this message, Docker took the following steps:\r\n 1. The Docker client contacted the Docker daemon.\r\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\r\n    (amd64)\r\n 3. The Docker daemon created a new container from that image which runs the\r\n    executable that produces the output you are currently reading.\r\n 4. The Docker daemon streamed that output to the Docker client, which sent it\r\n    to your terminal.\r\n\r\nTo try something more ambitious, you can run an Ubuntu container with:\r\n $ docker run -it ubuntu bash\r\n\r\nShare images, automate workflows, and more with a free Docker ID:\r\n https://hub.docker.com/\r\n\r\nFor more examples and ideas, visit:\r\n https://docs.docker.com/get-started/\n"})}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.a,{href:"https://docs.docker.com/",children:"Resource"})})]})}function u(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},8453:(e,o,r)=>{r.d(o,{R:()=>a,x:()=>c});var n=r(6540);const t={},s=n.createContext(t);function a(e){const o=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);